/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gui;

import beans.EThemeEvenement;
import beans.Evenement;
import beans.Intervenant;
import beans.ParticipationEvenement;
import services.EvenementService;
import services.IntervenantService;
import services.ParticipationEvenementService;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;

/**
 *
 * @author HP-PC
 */
public class EvenementForm extends javax.swing.JInternalFrame {

    private IntervenantService is;
    private EvenementService es;
    private ParticipationEvenementService ps;
    private DefaultTableModel model;
    private static int id;

    /**
     * Creates new form EvenementForm
     */
    public EvenementForm() {
        initComponents();
        is = new IntervenantService();
        es = new EvenementService();
        loadParticipant();
        model = (DefaultTableModel) evenementliste.getModel();
        load();

    }

    void loadParticipant() {
        for (Intervenant i : is.findAll()) {
            listParticipant.addItem(i);
        }

    }

    void load() {
        model.setRowCount(0);
        for (Evenement e : es.findAll()) {
            model.addRow(new Object[]{
                e.getId(),
                e.getTitre(),
                e.getTheme(),
                e.getDate(),
                e.getLieu(),
                e.getIntervenant()

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        S = new javax.swing.JRadioButton();
        T = new javax.swing.JRadioButton();
        I = new javax.swing.JRadioButton();
        E = new javax.swing.JRadioButton();
        txtDate = new com.toedter.calendar.JDateChooser();
        txtLieu = new javax.swing.JTextField();
        bnAdd = new javax.swing.JButton();
        bnUpdate = new javax.swing.JButton();
        bnDelete = new javax.swing.JButton();
        listParticipant = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evenementliste = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setFont(new java.awt.Font("Roboto Slab Medium", 0, 10)); // NOI18N
        setVisible(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Gestoin des evenements", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("Theme :");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Date :");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Lieu :");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Participants :");

        buttonGroup1.add(S);
        S.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        S.setText("SCIENCE");

        buttonGroup1.add(T);
        T.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        T.setText("TECHNOLOGIE");

        buttonGroup1.add(I);
        I.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        I.setText("INNOVATION");

        buttonGroup1.add(E);
        E.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        E.setText("EDUCATION");

        txtDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtLieu.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        txtLieu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bnAdd.setBackground(new java.awt.Color(102, 204, 0));
        bnAdd.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        bnAdd.setText("Ajouter");
        bnAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddActionPerformed(evt);
            }
        });

        bnUpdate.setBackground(new java.awt.Color(255, 255, 0));
        bnUpdate.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        bnUpdate.setText("Modifier");
        bnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnUpdateActionPerformed(evt);
            }
        });

        bnDelete.setBackground(new java.awt.Color(255, 0, 0));
        bnDelete.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        bnDelete.setForeground(new java.awt.Color(255, 255, 255));
        bnDelete.setText("Supprimer");
        bnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDeleteActionPerformed(evt);
            }
        });

        listParticipant.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        listParticipant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listParticipant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listParticipantActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Titre:");

        txtNom.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtNom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(S)
                        .addGap(18, 18, 18)
                        .addComponent(T))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(I)
                        .addGap(18, 18, 18)
                        .addComponent(E))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listParticipant, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(S)
                    .addComponent(T)
                    .addComponent(I)
                    .addComponent(E))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(listParticipant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnAdd)
                    .addComponent(bnUpdate)
                    .addComponent(bnDelete))
                .addGap(8, 8, 8))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Liste des evenements", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        evenementliste.setBackground(new java.awt.Color(204, 204, 204));
        evenementliste.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        evenementliste.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Titre", "Theme", "Date", "Lieu", "Participant"
            }
        ));
        evenementliste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evenementlisteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(evenementliste);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/qqJAVA_L-removebg55555555-preview.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddActionPerformed

        String titre = txtNom.getText().trim();
        Date date = txtDate.getDate();
        String lieu = txtLieu.getText().trim();
        Intervenant intervenant = (Intervenant) listParticipant.getSelectedItem();
        EThemeEvenement theme = null;

        if (S.isSelected()) {
            theme = EThemeEvenement.SCIENCE;
        } else if (T.isSelected()) {
            theme = EThemeEvenement.TECHNOLOGIE;
        } else if (I.isSelected()) {
            theme = EThemeEvenement.INNOVATION;
        } else if (E.isSelected()) {
            theme = EThemeEvenement.EDUCATION;
        }

        if (titre.isEmpty() || theme == null || date == null || lieu.isEmpty() || intervenant == null) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
            return;
        }

        Evenement evenement = new Evenement(titre, theme, date, lieu, intervenant);
        if (es.create(evenement)) {
            JOptionPane.showMessageDialog(this, "Événement bien enregistré !");
            load();
        } else {
            JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement de l'événement !");
        }

    }//GEN-LAST:event_bnAddActionPerformed

    private void evenementlisteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evenementlisteMouseClicked
        int selectedRow = evenementliste.getSelectedRow();

        if (selectedRow == -1) {
            return;
        }

        id = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
        txtNom.setText(model.getValueAt(selectedRow, 1).toString());
        txtLieu.setText(model.getValueAt(selectedRow, 4).toString());

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date = sdf.parse(model.getValueAt(selectedRow, 3).toString());
            txtDate.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la conversion de la date !");
        }

        String theme = model.getValueAt(selectedRow, 2).toString();
        if (theme.equalsIgnoreCase("SCIENCE")) {
            S.setSelected(true);
        } else if (theme.equalsIgnoreCase("TECHNOLOGIE")) {
            T.setSelected(true);
        } else if (theme.equalsIgnoreCase("INNOVATION")) {
            I.setSelected(true);
        } else if (theme.equalsIgnoreCase("EDUCATION")) {
            E.setSelected(true);
        }

        Intervenant intervenantEvenement = (Intervenant) model.getValueAt(selectedRow, 5); 

        if (intervenantEvenement != null) {
            for (int i = 0; i < listParticipant.getItemCount(); i++) {
                Intervenant intervenant = (Intervenant) listParticipant.getItemAt(i);
                if (intervenant.getId() == intervenantEvenement.getId()) {
                    listParticipant.setSelectedIndex(i); 
                    break;
                }
            }
        }

      }//GEN-LAST:event_evenementlisteMouseClicked

    private void bnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDeleteActionPerformed
        int selectedRow = evenementliste.getSelectedRow(); // Récupérer la ligne sélectionnée

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un événement à supprimer !");
            return;
        }

        int response = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cet événement ?", "Confirmation", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());

            if (es.delete(es.findById(id))) {
                JOptionPane.showMessageDialog(this, "Événement supprimé avec succès !");
                load();
            } else {
                JOptionPane.showMessageDialog(this, "Erreur lors de la suppression !");
            }
        }
     }//GEN-LAST:event_bnDeleteActionPerformed

    private void bnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnUpdateActionPerformed

        int selectedRow = evenementliste.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un événement à modifier !");
            return;
        }

        int response = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier cet événement ?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {

            int id = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
            String titre = txtNom.getText().trim();
            String lieu = txtLieu.getText().trim();
            Date date = txtDate.getDate();
            Intervenant intervenant = (Intervenant) listParticipant.getSelectedItem();
            EThemeEvenement theme = null;

            if (S.isSelected()) {
                theme = EThemeEvenement.SCIENCE;
            } else if (T.isSelected()) {
                theme = EThemeEvenement.TECHNOLOGIE;
            } else if (I.isSelected()) {
                theme = EThemeEvenement.INNOVATION;
            } else if (E.isSelected()) {
                theme = EThemeEvenement.EDUCATION;
            }

            if (titre.isEmpty() || theme == null || date == null || lieu.isEmpty() || intervenant == null) {
                JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
                return;
            }

            Evenement evenement = new Evenement(id, titre, theme, date, lieu, intervenant);
            if (es.update(evenement)) {
                JOptionPane.showMessageDialog(this, "Événement modifié avec succès !");
                load();
            } else {
                JOptionPane.showMessageDialog(this, "Problème lors de la mise à jour !");
            }
        }
    }//GEN-LAST:event_bnUpdateActionPerformed

    private void listParticipantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listParticipantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listParticipantActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton E;
    private javax.swing.JRadioButton I;
    private javax.swing.JRadioButton S;
    private javax.swing.JRadioButton T;
    private javax.swing.JButton bnAdd;
    private javax.swing.JButton bnDelete;
    private javax.swing.JButton bnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable evenementliste;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox listParticipant;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtLieu;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables
}
